{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: defaultCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          amount: newItem.amount,\n          price: newItem.price,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.amount = existingItem.amount + newItem.amount;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","defaultCartState","items","totalAmount","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","amount","price","totalPrice","removeItemFromCart","cartActions","actions"],"sources":["/Users/paolo/Desktop/react-food-order-app/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: defaultCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          amount: newItem.amount,\n          price: newItem.price,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.amount = existingItem.amount + newItem.amount;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACfD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdX,IAAI,EAAEM,OAAO,CAACN,IAAI;UAClBa,MAAM,EAAEP,OAAO,CAACO,MAAM;UACtBC,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,UAAU,EAAET,OAAO,CAACQ;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,YAAY,CAACK,MAAM,GAAGL,YAAY,CAACK,MAAM,GAAGP,OAAO,CAACO,MAAM;QAC1DL,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACQ,KAAK;MACnE;IACF,CAAC;IACDE,kBAAkB,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IACjE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGlB,SAAS,CAACmB,OAAO;AAE5C,eAAenB,SAAS"},"metadata":{},"sourceType":"module"}